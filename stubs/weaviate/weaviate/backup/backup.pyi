from typing import Any, Dict, List, Set, Union
from weaviate.connect import Connection as Connection
from weaviate.exceptions import BackupFailedException as BackupFailedException, EmptyResponseException as EmptyResponseException, UnexpectedStatusCodeException as UnexpectedStatusCodeException

STORAGE_NAMES: Set[str]

class Backup:
    def __init__(self, connection: Connection) -> None: ...
    def create(self, backup_id: str, backend: str, include_classes: Union[List[str], str, None] = ..., exclude_classes: Union[List[str], str, None] = ..., wait_for_completion: bool = ...) -> dict: ...
    def get_create_status(self, backup_id: str, backend: str) -> Dict[str, Any]: ...
    def restore(self, backup_id: str, backend: str, include_classes: Union[List[str], str, None] = ..., exclude_classes: Union[List[str], str, None] = ..., wait_for_completion: bool = ...) -> dict: ...
    def get_restore_status(self, backup_id: str, backend: str) -> Dict[str, Any]: ...
