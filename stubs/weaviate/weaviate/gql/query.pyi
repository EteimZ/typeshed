from .aggregate import AggregateBuilder as AggregateBuilder
from .get import GetBuilder as GetBuilder, PROPERTIES as PROPERTIES
from .multi_get import MultiGetBuilder as MultiGetBuilder
from typing import Any, Dict, List, Optional
from weaviate.connect import Connection as Connection
from weaviate.exceptions import UnexpectedStatusCodeException as UnexpectedStatusCodeException

class Query:
    def __init__(self, connection: Connection) -> None: ...
    def get(self, class_name: str, properties: Optional[PROPERTIES] = ...) -> GetBuilder: ...
    def multi_get(self, get_builder: List[GetBuilder]) -> MultiGetBuilder: ...
    def aggregate(self, class_name: str) -> AggregateBuilder: ...
    def raw(self, gql_query: str) -> Dict[str, Any]: ...
