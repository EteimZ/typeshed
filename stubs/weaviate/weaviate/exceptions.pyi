from _typeshed import Incomplete
from typing import Dict, Optional
from requests import Response as Response

ERROR_CODE_EXPLANATION: Dict[int, str]

class WeaviateBaseError(Exception):
    message: str
    def __init__(self, message: str = ...) -> None: ...

class UnexpectedStatusCodeException(WeaviateBaseError):
    def __init__(self, message: str, response: Response) -> None: ...
    @property
    def status_code(self) -> int: ...

class ObjectAlreadyExistsException(WeaviateBaseError): ...
class AuthenticationFailedException(WeaviateBaseError): ...
class SchemaValidationException(WeaviateBaseError): ...
class BackupFailedException(WeaviateBaseError): ...
class EmptyResponseException(WeaviateBaseError): ...
class MissingScopeException(WeaviateBaseError): ...

class AdditionalPropertiesException(WeaviateBaseError):
    def __init__(self, additional_dict: str, additional_dataclass: str) -> None: ...

class WeaviateStartUpError(WeaviateBaseError): ...

class WeaviateEmbeddedInvalidVersion(WeaviateBaseError):
    def __init__(self, url: str) -> None: ...
